# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.59.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Bumps build number and tags the current commit. Requires a clean working directory!"
  lane :bump do

    #ensure_git_status_clean

    # Increment the build number (not the version number)
    increment_build_number(xcodeproj: "ChicagoComedy.xcodeproj")
    commit_version_bump(xcodeproj: "ChicagoComedy.xcodeproj")
    add_git_tag
    #push_to_git_remote

  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(
      scheme: "ChicagoComedy", 
      export_method: "ad-hoc",
      export_options: {
        provisioningProfiles: {
          "com.myboringtown.ChicagoComedy" => "ChicagoComedy AdHoc"
        }
      }
    ) # Build your app - more options available

    crashlytics(
      api_token: "4b64c51435e0d5d7c419cd87cc19e606e5d191a4",
      build_secret: "b46afb921cd1bb5416666eea24711cf885f31d6b596fb983e2323d0f8110ad97"
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
